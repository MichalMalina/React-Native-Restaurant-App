{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as ActionTypes from \"./ActionTypes\";\nimport { concat } from \"react-native-reanimated\";\nexport var comments = function comments() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    errMess: null,\n    comments: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errMess: null,\n        comments: action.payload\n      });\n\n    case ActionTypes.COMMENTS_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errMess: action.payload\n      });\n\n    case ActionTypes.ADD_COMMENT:\n      return state.concat();\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/redux/comments.js"],"names":["ActionTypes","concat","comments","state","errMess","action","type","ADD_COMMENTS","payload","COMMENTS_FAILED","ADD_COMMENT"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ;AACA,SAAQC,MAAR,QAAqB,yBAArB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAmD;AAAA,MAAlDC,KAAkD,uEAA1C;AAAEC,IAAAA,OAAO,EAAE,IAAX;AAAiBF,IAAAA,QAAQ,EAAC;AAA1B,GAA0C;AAAA,MAAXG,MAAW;;AACvE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACO,YAAjB;AACI,6CAAWJ,KAAX;AAAkBC,QAAAA,OAAO,EAAE,IAA3B;AAAiCF,QAAAA,QAAQ,EAAEG,MAAM,CAACG;AAAlD;;AAEJ,SAAKR,WAAW,CAACS,eAAjB;AACI,6CAAWN,KAAX;AAAkBC,QAAAA,OAAO,EAAEC,MAAM,CAACG;AAAlC;;AAEJ,SAAKR,WAAW,CAACU,WAAjB;AACI,aAAOP,KAAK,CAACF,MAAN,EAAP;;AAEJ;AACI,aAAOE,KAAP;AAXR;AAaH,CAdM","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport {concat} from \"react-native-reanimated\";\r\n\r\nexport const comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            return state.concat()\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}