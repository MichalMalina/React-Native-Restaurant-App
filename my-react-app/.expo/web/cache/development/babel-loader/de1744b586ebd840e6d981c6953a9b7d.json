{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { favorites } from \"./favorites\";\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    return fetch(baseUrl + 'comments').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    }).catch(function (error) {\n      return dispatch(commentsFailed(error.message));\n    });\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var postComment = function postComment(dishId, author, rating, comment) {\n  return function (dispatch) {\n    var newComment = {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n    };\n    setTimeout(function () {\n      dispatch(addComment(dishId, author, rating, comment));\n    }, 2000);\n  };\n};\nexport var addComment = function addComment(dishId, author, rating, comment) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    payload: dishId,\n    author: author,\n    rating: rating,\n    comment: comment\n  };\n};\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading());\n    return fetch(baseUrl + 'dishes').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    }).catch(function (error) {\n      return dispatch(dishesFailed(error.message));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading());\n    return fetch(baseUrl + 'promotions').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    }).catch(function (error) {\n      return dispatch(promosFailed(error.message));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};\nexport var fetchLeaders = function fetchLeaders() {\n  return function (dispatch) {\n    dispatch(leadersLoading());\n    return fetch(baseUrl + 'leaders').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (leaders) {\n      return dispatch(addLeaders(leaders));\n    }).catch(function (error) {\n      return dispatch(leadersFailed(error.message));\n    });\n  };\n};\nexport var leadersLoading = function leadersLoading() {\n  return {\n    type: ActionTypes.LEADERS_LOADING\n  };\n};\nexport var leadersFailed = function leadersFailed(errmess) {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport var addLeaders = function addLeaders(leaders) {\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\nexport var postFavorite = function postFavorite(dishId) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(addFavorite(dishId));\n    }, 2000);\n  };\n};\nexport var addFavorite = function addFavorite(dishId) {\n  return {\n    type: ActionTypes.ADD_FAVORITE,\n    payload: dishId\n  };\n};","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","favorites","fetchComments","dispatch","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","comments","addComments","catch","commentsFailed","type","COMMENTS_FAILED","payload","ADD_COMMENTS","postComment","dishId","author","rating","comment","newComment","setTimeout","addComment","ADD_COMMENT","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","postFavorite","addFavorite","ADD_FAVORITE"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {favorites} from \"./favorites\";\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const postComment = (dishId , author , rating , comment)  => (dispatch) => {\r\n\r\n    const newComment = {\r\n\r\n        dishId: dishId,\r\n\r\n        rating: rating,\r\n\r\n        author: author,\r\n\r\n        comment: comment\r\n\r\n    }\r\n\r\n    setTimeout(() => {\r\n        dispatch(addComment(dishId , author , rating , comment));\r\n    }, 2000);\r\n};\r\n\r\n\r\nexport const addComment = (dishId , author , rating, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: dishId , author , rating , comment\r\n});\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading());\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFavorite = (dishId)  => (dispatch) => {\r\n\r\n    setTimeout(() => {\r\n        dispatch(addFavorite(dishId));\r\n    }, 2000);\r\n};\r\n\r\n\r\nexport const addFavorite = (dishId) => ({\r\n    type: ActionTypes.ADD_FAVORITE,\r\n    payload: dishId\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}