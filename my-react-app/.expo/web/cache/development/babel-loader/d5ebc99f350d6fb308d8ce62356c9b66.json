{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michal\\\\WebstormProjects\\\\new_react\\\\my-react-app\\\\components\\\\DishdetailComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Card, Icon, Input, Rating, AirbnbRating } from \"react-native-elements\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { connect } from \"react-redux\";\nimport { postFavorite as _postFavorite } from \"../redux/ActionCreators\";\nimport { postComment as _postComment } from \"../redux/ActionCreators\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    favorites: state.favorites\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    postFavorite: function postFavorite(dishId) {\n      return dispatch(_postFavorite(dishId));\n    },\n    postComment: function postComment(dishId, rating, author, comment) {\n      return dispatch(_postComment(dishId, rating, author, comment));\n    }\n  };\n};\n\nfunction RenderDish(props) {\n  var dish = props.dish;\n\n  if (dish != null) {\n    return React.createElement(Card, {\n      featuredTitle: dish.name,\n      image: {\n        uri: baseUrl + dish.image\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, dish.description), React.createElement(Icon, {\n      name: props.favorite ? \"heart\" : \"heart-o\",\n      raised: true,\n      reverse: true,\n      type: \"font-awesome\",\n      color: \"#f50\",\n      onPress: function onPress() {\n        return props.favorite ? console.log(\"already favored\") : props.onPress();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }), React.createElement(Icon, {\n      name: \"pencil\",\n      raised: true,\n      reverse: true,\n      type: \"font-awesome\",\n      color: \"#512DA8\",\n      onPress: function onPress() {\n        return props.toggle();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    });\n  }\n}\n\nfunction RenderComments(props) {\n  var comments = props.comments;\n\n  var renderCommentItem = function renderCommentItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      key: index,\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, item.comment), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, item.rating, \" Stars\"), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, '-- ' + item.author + ', ' + item.date));\n  };\n\n  return React.createElement(Card, {\n    title: \"Comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: comments,\n    renderItem: renderCommentItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar Dishdetail = function (_Component) {\n  _inherits(Dishdetail, _Component);\n\n  var _super = _createSuper(Dishdetail);\n\n  function Dishdetail(props) {\n    var _this;\n\n    _classCallCheck(this, Dishdetail);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      toggleComment: false,\n      author: String,\n      comment: String,\n      rating: 5\n    };\n    return _this;\n  }\n\n  _createClass(Dishdetail, [{\n    key: \"markFavorite\",\n    value: function markFavorite(dishId) {\n      this.props.postFavorite(dishId);\n    }\n  }, {\n    key: \"addComment\",\n    value: function addComment(newComment) {\n      this.props.postComment(newComment);\n      this.toggleComment();\n    }\n  }, {\n    key: \"toggleComment\",\n    value: function toggleComment() {\n      this.setState({\n        toggleComment: !this.state.toggleComment\n      });\n    }\n  }, {\n    key: \"resetState\",\n    value: function resetState() {\n      this.setState({\n        author: \"\",\n        comment: \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dishId = this.props.route.params.dishId;\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, React.createElement(RenderDish, {\n        dish: this.props.dishes.dishes[+dishId],\n        favorite: this.props.favorites.some(function (el) {\n          return el === dishId;\n        }),\n        onPress: function onPress() {\n          return _this2.markFavorite(dishId);\n        },\n        toggle: function toggle() {\n          return _this2.toggleComment();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }), React.createElement(RenderComments, {\n        comments: this.props.comments.comments.filter(function (comment) {\n          return comment.dishId === dishId;\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }), React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.state.toggleComment,\n        onDismiss: function onDismiss() {\n          return _this2.toggleComment();\n        },\n        onRequestClose: function onRequestClose() {\n          return _this2.toggleComment();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, React.createElement(Rating, {\n        type: \"star\",\n        ratingCount: 5,\n        imageSize: 60,\n        showRating: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Author\",\n        leftIcon: {\n          type: \"font-awesome\",\n          name: \"user-o\"\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            author: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Comment\",\n        leftIcon: {\n          type: \"font-awesome\",\n          name: \"comment-o\"\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            comment: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }), React.createElement(Button, {\n        title: \"Submit\",\n        onPress: function onPress() {\n          _this2.addComment({\n            dishId: _this2.state.dishId,\n            rating: _this2.state.rating,\n            author: _this2.state.author,\n            comment: _this2.state.comment\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return Dishdetail;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishdetail);","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/components/DishdetailComponent.js"],"names":["React","Component","Card","Icon","Input","Rating","AirbnbRating","baseUrl","connect","postFavorite","postComment","mapStateToProps","state","dishes","comments","favorites","mapDispatchToProps","dispatch","dishId","rating","author","comment","RenderDish","props","dish","name","uri","image","margin","description","favorite","console","log","onPress","toggle","RenderComments","renderCommentItem","item","index","fontSize","date","id","toString","Dishdetail","toggleComment","String","newComment","setState","route","params","some","el","markFavorite","filter","type","text","addComment"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {ScrollView, Text, View, FlatList , Modal , Button} from \"react-native\";\r\nimport {Card, Icon , Input , Rating ,AirbnbRating} from \"react-native-elements\";\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\nimport {connect} from \"react-redux\";\r\nimport {postFavorite} from \"../redux/ActionCreators\"\r\nimport {postComment} from \"../redux/ActionCreators\";\r\n\r\n\r\nconst mapStateToProps = state=> {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        favorites: state.favorites\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postFavorite: (dishId) => dispatch(postFavorite(dishId)),\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n});\r\n\r\nfunction RenderDish  (props) {\r\n\r\n    const dish = props.dish;\r\n\r\n    if(dish != null)\r\n    {   return(\r\n        <Card\r\n            featuredTitle={dish.name}\r\n            image={{uri: baseUrl + dish.image}}>\r\n            <Text style={{margin: 10}}>{dish.description}</Text>\r\n            <Icon name={ props.favorite ? \"heart\" : \"heart-o\"  }\r\n\r\n                  raised\r\n                  reverse\r\n                  type=\"font-awesome\"\r\n                  color=\"#f50\"\r\n                  onPress={() => props.favorite ? console.log(\"already favored\") : props.onPress()}\r\n            />\r\n            <Icon name={\"pencil\"}\r\n\r\n                  raised\r\n                  reverse\r\n                  type=\"font-awesome\"\r\n                  color=\"#512DA8\"\r\n                  onPress={() => props.toggle()}\r\n\r\n            />\r\n        </Card>\r\n\r\n    );}\r\n    else {\r\n      return (<View></View>);\r\n    }\r\n}\r\n\r\nfunction RenderComments(props) {\r\n\r\n    const comments = props.comments;\r\n\r\n    const renderCommentItem = ({item, index}) => {\r\n\r\n        return (\r\n            <View key={index} style={{margin: 10}}>\r\n                <Text style={{fontSize: 14}}>{item.comment}</Text>\r\n                <Text style={{fontSize: 12}}>{item.rating} Stars</Text>\r\n                <Text style={{fontSize: 12}}>{'-- ' + item.author + ', ' + item.date}</Text>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Card title='Comments'>\r\n            <FlatList\r\n                data={comments}\r\n                renderItem={renderCommentItem}\r\n                keyExtractor={item => item.id.toString()}\r\n            />\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\nclass Dishdetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggleComment:false,\r\n            author:String,\r\n            comment:String,\r\n            rating:5,\r\n            \r\n        };\r\n    }\r\n\r\n    markFavorite(dishId) {\r\n        this.props.postFavorite(dishId);\r\n    }\r\n\r\n    addComment(newComment) {\r\n        this.props.postComment(newComment);\r\n        this.toggleComment()\r\n    }\r\n\r\n    toggleComment() {\r\n        this.setState({toggleComment:!this.state.toggleComment})\r\n    }\r\n\r\n    resetState() {\r\n        this.setState({author:\"\" , comment:\"\"})\r\n    }\r\n\r\n    render() {\r\n\r\n        const dishId = this.props.route.params.dishId;\r\n\r\n        return (\r\n            <ScrollView>\r\n            <RenderDish dish = {this.props.dishes.dishes[+dishId]}  favorite={this.props.favorites.some(el => el === dishId)}\r\n            onPress={() => this.markFavorite(dishId)} toggle={() => this.toggleComment()}\r\n            />\r\n                <RenderComments comments={this.props.comments.comments.filter((comment) => comment.dishId === dishId )} />\r\n                <Modal\r\n                    animationType={\"slide\"}\r\n                    transparent={false}\r\n                    visible={this.state.toggleComment}\r\n                    onDismiss={() => this.toggleComment()}\r\n                    onRequestClose={() => this.toggleComment()}\r\n                >\r\n                    <View>\r\n                    <Rating\r\n                        type='star'\r\n                        ratingCount={5}\r\n                        imageSize={60}\r\n                        showRating\r\n                    />\r\n\r\n                        <Input\r\n                        placeholder=\"Author\"\r\n                        leftIcon={{type:\"font-awesome\" , name:\"user-o\"}}\r\n\r\n                        onChangeText={(text => this.setState({author:text}))}\r\n                        />\r\n                        <Input\r\n                        placeholder=\"Comment\"\r\n                        leftIcon={{type:\"font-awesome\" , name:\"comment-o\"}}\r\n\r\n                        onChangeText={(text => this.setState({comment:text}))}\r\n                        />\r\n\r\n\r\n                        <Button title=\"Submit\" onPress={()=> {this.addComment({dishId: this.state.dishId , rating:this.state.rating , author:this.state.author , comment:this.state.comment}) }}/>\r\n                    </View>\r\n                </Modal>\r\n\r\n\r\n\r\n            </ScrollView>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishdetail);\r\n"]},"metadata":{},"sourceType":"module"}