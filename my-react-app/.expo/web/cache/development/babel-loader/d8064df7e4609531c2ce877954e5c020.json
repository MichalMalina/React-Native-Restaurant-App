{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michal\\\\WebstormProjects\\\\new_react\\\\my-react-app\\\\components\\\\LoginComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Icon, Input, CheckBox } from \"react-native-elements\";\nimport * as SecureStore from \"expo-secure-store/\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      remember: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      SecureStore.getItemAsync(\"userinfo\").then(function (userdata) {\n        var userinfo = JSON.parse(userdata);\n\n        if (userinfo) {\n          _this2.setState({\n            username: userinfo.username\n          });\n\n          _this2.setState({\n            password: userinfo.password\n          });\n\n          _this2.setState({\n            remember: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      console.log(JSON.stringify(this.state));\n\n      if (this.state.remember) {\n        SecureStore.setItemAsync(\"userinfo\", JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })).catch(function (error) {\n          return console.log(\"Could not save user info\", error);\n        });\n      } else {\n        SecureStore.deleteItemAsync(\"userinfo\").catch(function (error) {\n          return console.log(\"Could not delete user info\", error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Username\",\n        value: this.state.username,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            username: text\n          });\n        },\n        leftIcon: {\n          type: \"font-awesome\",\n          name: \"user-o\"\n        },\n        inputContainerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }\n      }), React.createElement(Input, {\n        placeholder: \"password\",\n        value: this.state.password,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            password: text\n          });\n        },\n        leftIcon: {\n          type: \"font-awesome\",\n          name: \"key\"\n        },\n        inputContainerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }\n      }), React.createElement(CheckBox, {\n        checked: this.state.remember,\n        center: true,\n        onPress: function onPress() {\n          return _this3.setState({\n            remember: !_this3.state.remember\n          });\n        },\n        containerStyle: styles.formCheckbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }\n      }), React.createElement(View, {\n        style: styles.formButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      }, React.createElement(Button, {\n        title: \"Login\",\n        onPress: function onPress() {\n          return _this3.handleLogin();\n        },\n        color: \"#512DA8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      })));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    margin: 20\n  },\n  formInput: {\n    margin: 40\n  },\n  formCheckbox: {\n    margin: 40,\n    backgroundColor: null\n  },\n  formButton: {\n    margin: 60\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/components/LoginComponent.js"],"names":["React","Component","Icon","Input","CheckBox","SecureStore","Login","props","state","username","password","remember","getItemAsync","then","userdata","userinfo","JSON","parse","setState","console","log","stringify","setItemAsync","catch","error","deleteItemAsync","styles","container","text","type","name","formInput","formCheckbox","formButton","handleLogin","StyleSheet","create","justifyContent","margin","backgroundColor"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {View, Text, StyleSheet, Button} from \"react-native\";\r\nimport {Icon , Input , CheckBox} from \"react-native-elements\";\r\nimport * as SecureStore from \"expo-secure-store/\";\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username:\"\",\r\n            password:\"\",\r\n            remember: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       SecureStore.getItemAsync(\"userinfo\").then((userdata) => {\r\n           let userinfo = JSON.parse(userdata);\r\n           if(userinfo) {\r\n               this.setState({username: userinfo.username});\r\n               this.setState({password: userinfo.password});\r\n               this.setState({remember: true})\r\n           }\r\n       })\r\n    }\r\n\r\n    handleLogin() {\r\n        console.log(JSON.stringify(this.state));\r\n        if(this.state.remember) {\r\n            SecureStore.setItemAsync(\"userinfo\" , JSON.stringify({username:this.state.username , password:this.state.password}))\r\n                .catch((error) => console.log(\"Could not save user info\" , error));}\r\n            else {SecureStore.deleteItemAsync(\"userinfo\")\r\n            .catch((error) => console.log(\"Could not delete user info\", error));\r\n            }\r\n        }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                   <Input\r\n                        placeholder=\"Username\"\r\n                        value={this.state.username}\r\n                        onChangeText={(text) => this.setState({username:text})}\r\n                        leftIcon={{type:\"font-awesome\" , name:\"user-o\"}}\r\n                        inputContainerStyle={styles.formInput}\r\n                   />\r\n                   <Input\r\n                        placeholder=\"password\"\r\n                        value={this.state.password}\r\n                        onChangeText = {(text) => this.setState({password:text})}\r\n                        leftIcon={{type:\"font-awesome\" , name:\"key\"}}\r\n                        inputContainerStyle={styles.formInput}\r\n                   />\r\n                   <CheckBox\r\n                       checked={this.state.remember}\r\n                       center\r\n                       onPress={() => this.setState({remember: !this.state.remember})}\r\n                       containerStyle={styles.formCheckbox}\r\n                   />\r\n                  <View style={styles.formButton}>\r\n                        <Button\r\n                            title=\"Login\"\r\n                            onPress={() => this.handleLogin()}\r\n                            color=\"#512DA8\"\r\n                        />\r\n                  </View>\r\n            </View>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'center',\r\n        margin: 20,\r\n    },\r\n    formInput: {\r\n        margin:40\r\n    },\r\n    formCheckbox: {\r\n        margin: 40,\r\n        backgroundColor: null\r\n    },\r\n    formButton: {\r\n        margin: 60\r\n    }\r\n});\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}