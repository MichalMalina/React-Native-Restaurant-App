{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michal\\\\WebstormProjects\\\\new_react\\\\my-react-app\\\\components\\\\FavoriteComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ListItem } from \"react-native-elements\";\nimport Loading from \"./LoadingComponent\";\nimport { connect } from \"react-redux\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dishes: state.dishes,\n    favorites: state.favorites\n  };\n};\n\nvar Favorites = function (_Component) {\n  _inherits(Favorites, _Component);\n\n  var _super = _createSuper(Favorites);\n\n  function Favorites() {\n    _classCallCheck(this, Favorites);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Favorites, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var navigate = this.props.navigation.navigate;\n\n      var renderMenuItem = function renderMenuItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return React.createElement(ListItem, {\n          key: index,\n          title: item.name,\n          subtitle: item.description,\n          hideChevron: true,\n          onPress: function onPress() {\n            return navigate(\"Dishdetail\", {\n              dishId: item.id\n            });\n          },\n          leftAvatar: {\n            source: {\n              uri: baseUrl + item.image\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }\n        });\n      };\n\n      if (this.state.dishes.isLoading) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }\n        });\n      } else if (this.state.dishes.errMess) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 18\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 24\n          }\n        }, this.state.dishes.errMess));\n      } else {\n        return React.createElement(FlatList, {\n          data: this.props.dishes.dishes.filter(function (dish) {\n            return _this.props.favorites.some(function (el) {\n              return el === dish.id;\n            });\n          }),\n          renderItem: renderMenuItem,\n          keyExtractor: function keyExtractor(item) {\n            return item.id.toString();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }\n        });\n      }\n    }\n  }]);\n\n  return Favorites;\n}(Component);\n\nexport default connect(mapStateToProps())(Favorites);","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/components/FavoriteComponent.js"],"names":["React","Component","ListItem","Loading","connect","baseUrl","mapStateToProps","state","dishes","favorites","Favorites","navigate","props","navigation","renderMenuItem","item","index","name","description","dishId","id","source","uri","image","isLoading","errMess","filter","dish","some","el","toString"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;;;;AAEA,SAAQC,QAAR,QAAuB,uBAAvB;AACA,OAAOC,OAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAQ;AACJC,IAAAA,MAAM,EAAED,KAAK,CAACC,MADV;AAEJC,IAAAA,SAAS,EAACF,KAAK,CAACE;AAFZ,GAAR;AAIH,CALD;;IAOMC,S;;;;;;;;;;;;;6BAIO;AAAA;;AAAA,UACEC,QADF,GACc,KAAKC,KAAL,CAAWC,UADzB,CACEF,QADF;;AAGL,UAAMG,cAAc,GAAG,SAAjBA,cAAiB,OAAoB;AAAA,YAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,YAAXC,KAAW,QAAXA,KAAW;AACvC,eACI,oBAAC,QAAD;AACI,UAAA,GAAG,EAAEA,KADT;AAEI,UAAA,KAAK,EAAED,IAAI,CAACE,IAFhB;AAGI,UAAA,QAAQ,EAAEF,IAAI,CAACG,WAHnB;AAII,UAAA,WAAW,EAAE,IAJjB;AAKI,UAAA,OAAO,EAAE;AAAA,mBAAMP,QAAQ,CAAC,YAAD,EAAgB;AAACQ,cAAAA,MAAM,EAAEJ,IAAI,CAACK;AAAd,aAAhB,CAAd;AAAA,WALb;AAMI,UAAA,UAAU,EAAE;AAACC,YAAAA,MAAM,EAAE;AAACC,cAAAA,GAAG,EAACjB,OAAO,GAAGU,IAAI,CAACQ;AAApB;AAAT,WANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,OAZD;;AAcA,UAAG,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,SAArB,EACA;AACI,eAAQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,OAHD,MAKK,IAAG,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiB,OAArB,EACL;AAAC,eAAQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,KAAKlB,KAAL,CAAWC,MAAX,CAAkBiB,OAAzB,CAAN,CAAR;AAA+D,OAD3D,MAIA;AACD,eACI,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAE,KAAKb,KAAL,CAAWJ,MAAX,CAAkBA,MAAlB,CAAyBkB,MAAzB,CAAgC,UAAAC,IAAI;AAAA,mBAAI,KAAI,CAACf,KAAL,CAAWH,SAAX,CAAqBmB,IAArB,CAA0B,UAAAC,EAAE;AAAA,qBAAIA,EAAE,KAAKF,IAAI,CAACP,EAAhB;AAAA,aAA5B,CAAJ;AAAA,WAApC,CAAhB;AACU,UAAA,UAAU,EAAEN,cADtB;AAEU,UAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACK,EAAL,CAAQU,QAAR,EAAJ;AAAA,WAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;AACJ;;;;EAxCmB7B,S;;AA4CxB,eAAeG,OAAO,CAACE,eAAe,EAAhB,CAAP,CAA2BI,SAA3B,CAAf","sourcesContent":["import React , {Component} from \"react\"\r\nimport {View , FlatList , Text} from \"react-native\";\r\nimport {ListItem} from \"react-native-elements\";\r\nimport Loading from \"./LoadingComponent\"\r\nimport {connect} from \"react-redux\";\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return  {\r\n        dishes: state.dishes,\r\n        favorites:state.favorites\r\n    }\r\n};\r\n\r\nclass Favorites extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const {navigate} = this.props.navigation;\r\n\r\n        const renderMenuItem = ({item , index}) => {\r\n            return(\r\n                <ListItem\r\n                    key={index}\r\n                    title={item.name}\r\n                    subtitle={item.description}\r\n                    hideChevron={true}\r\n                    onPress={() => navigate(\"Dishdetail\" , {dishId: item.id})}\r\n                    leftAvatar={{source: {uri:baseUrl + item.image}}}\r\n                ></ListItem>\r\n\r\n            )\r\n        };\r\n\r\n        if(this.state.dishes.isLoading)\r\n        {\r\n            return (<Loading/>)\r\n        }\r\n\r\n        else if(this.state.dishes.errMess)\r\n        {return (<View><Text>{this.state.dishes.errMess}</Text></View>)}\r\n\r\n\r\n        else {\r\n            return (\r\n                <FlatList data={this.props.dishes.dishes.filter(dish => this.props.favorites.some(el => el === dish.id))}\r\n                          renderItem={renderMenuItem}\r\n                          keyExtractor={item => item.id.toString()}\r\n                />\r\n\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps())(Favorites);\r\n"]},"metadata":{},"sourceType":"module"}