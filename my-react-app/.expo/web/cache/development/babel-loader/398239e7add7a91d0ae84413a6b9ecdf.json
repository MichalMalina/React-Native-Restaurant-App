{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michal\\\\WebstormProjects\\\\new_react\\\\my-react-app\\\\components\\\\DishdetailComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card, Icon } from \"react-native-elements\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { connect } from \"react-redux\";\nimport { postFavorite as _postFavorite } from \"../redux/ActionCreators\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    favorites: state.favorites\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    postFavorite: function postFavorite(dishId) {\n      return dispatch(_postFavorite(dishId));\n    }\n  };\n};\n\nfunction RenderDish(props) {\n  var dish = props.dish;\n\n  if (dish != null) {\n    return React.createElement(Card, {\n      featuredTitle: dish.name,\n      image: {\n        uri: baseUrl + dish.image\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, dish.description, \" yamete\"), React.createElement(Icon, {\n      name: props.favorite ? \"heart\" : \"heart-o\",\n      raised: true,\n      reverse: true,\n      type: \"font-awesome\",\n      color: \"#f50\",\n      onPress: function onPress() {\n        return props.favorite ? console.log(\"already favored\") : props.onPress();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    });\n  }\n}\n\nfunction RenderComments(props) {\n  var comments = props.comments;\n\n  var renderCommentItem = function renderCommentItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      key: index,\n      style: {\n        margin: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, item.comment), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, item.rating, \" Stars\"), React.createElement(Text, {\n      style: {\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, '-- ' + item.author + ', ' + item.date));\n  };\n\n  return React.createElement(Card, {\n    title: \"Comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: comments,\n    renderItem: renderCommentItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar Dishdetail = function (_Component) {\n  _inherits(Dishdetail, _Component);\n\n  var _super = _createSuper(Dishdetail);\n\n  function Dishdetail(props) {\n    var _this;\n\n    _classCallCheck(this, Dishdetail);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      favorites: []\n    };\n    return _this;\n  }\n\n  _createClass(Dishdetail, [{\n    key: \"markFavorite\",\n    value: function markFavorite(dishId) {\n      this.props.postFavorite(dishId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dishId = this.props.route.params.dishId;\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, React.createElement(RenderDish, {\n        dish: this.props.dishes.dishes[+dishId],\n        favorite: this.props.favorites.some(function (el) {\n          return el === dishId;\n        }),\n        onPress: function onPress() {\n          return _this2.markFavorite(dishId);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }), React.createElement(RenderComments, {\n        comments: this.props.comments.comments.filter(function (comment) {\n          return comment.dishId === dishId;\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Dishdetail;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishdetail);","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/components/DishdetailComponent.js"],"names":["React","Component","Card","Icon","baseUrl","connect","postFavorite","mapStateToProps","state","dishes","comments","favorites","mapDispatchToProps","dispatch","dishId","RenderDish","props","dish","name","uri","image","margin","description","favorite","console","log","onPress","RenderComments","renderCommentItem","item","index","fontSize","comment","rating","author","date","id","toString","Dishdetail","route","params","some","el","markFavorite","filter"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {ScrollView, Text, View} from \"react-native\";\r\nimport {FlatList} from \"react-native\";\r\nimport {Card, Icon} from \"react-native-elements\";\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\nimport {connect} from \"react-redux\";\r\nimport {postFavorite} from \"../redux/ActionCreators\"\r\n\r\n\r\nconst mapStateToProps = state=> {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        favorites: state.favorites\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postFavorite: (dishId) => dispatch(postFavorite(dishId))\r\n});\r\n\r\nfunction RenderDish  (props) {\r\n\r\n    const dish = props.dish;\r\n\r\n    if(dish != null)\r\n    {   return(\r\n        <Card\r\n            featuredTitle={dish.name}\r\n            image={{uri: baseUrl + dish.image}}>\r\n            <Text style={{margin: 10}}>{dish.description} yamete</Text>\r\n            <Icon name={ props.favorite ? \"heart\" : \"heart-o\"  }\r\n                  raised\r\n                  reverse\r\n                  type=\"font-awesome\"\r\n                  color=\"#f50\"\r\n                  onPress={() => props.favorite ? console.log(\"already favored\") : props.onPress()}\r\n            />\r\n        </Card>\r\n    );}\r\n    else {\r\n      return (<View></View>);\r\n    }\r\n}\r\n\r\nfunction RenderComments(props) {\r\n\r\n    const comments = props.comments;\r\n\r\n    const renderCommentItem = ({item, index}) => {\r\n\r\n        return (\r\n            <View key={index} style={{margin: 10}}>\r\n                <Text style={{fontSize: 14}}>{item.comment}</Text>\r\n                <Text style={{fontSize: 12}}>{item.rating} Stars</Text>\r\n                <Text style={{fontSize: 12}}>{'-- ' + item.author + ', ' + item.date}</Text>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Card title='Comments'>\r\n            <FlatList\r\n                data={comments}\r\n                renderItem={renderCommentItem}\r\n                keyExtractor={item => item.id.toString()}\r\n            />\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\nclass Dishdetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favorites:[]\r\n        };\r\n    }\r\n\r\n    markFavorite(dishId) {\r\n        this.props.postFavorite(dishId);\r\n    }\r\n\r\n    render() {\r\n\r\n        const dishId = this.props.route.params.dishId;\r\n\r\n        return (\r\n            <ScrollView>\r\n            <RenderDish dish = {this.props.dishes.dishes[+dishId]}  favorite={this.props.favorites.some(el => el === dishId)}\r\n            onPress={() => this.markFavorite(dishId)}\r\n            />\r\n                <RenderComments comments={this.props.comments.comments.filter((comment) => comment.dishId === dishId )} />\r\n            </ScrollView>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dishdetail);\r\n"]},"metadata":{},"sourceType":"module"}