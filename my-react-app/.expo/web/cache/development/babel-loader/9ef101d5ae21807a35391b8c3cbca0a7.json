{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michal\\\\WebstormProjects\\\\new_react\\\\my-react-app\\\\components\\\\MenuComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Tile } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dishes: state.dishes\n  };\n};\n\nvar Menu = function (_Component) {\n  _inherits(Menu, _Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    _classCallCheck(this, Menu);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Menu, [{\n    key: \"render\",\n    value: function render() {\n      var renderMenuItem = function renderMenuItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return React.createElement(Tile, {\n          title: item.name,\n          key: index,\n          caption: item.description,\n          hideChervron: true,\n          featured: true,\n          onPress: function onPress() {\n            return navigate('Dishdetail', {\n              dishId: item.id\n            });\n          },\n          leftAvatar: {\n            source: {\n              uri: baseUrl + item.image\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }\n        });\n      };\n\n      var navigate = this.props.navigation.navigate;\n\n      if (this.props.dishes.isLoading) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }\n        });\n      } else if (this.props.dishes.errMess) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }\n        }, props.dishes.errMess));\n      } else {\n        return React.createElement(FlatList, {\n          data: this.props.dishes.dishes,\n          renderItem: renderMenuItem,\n          keyExtractor: function keyExtractor(item) {\n            return item.id.toString();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }\n        });\n      }\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\nexport default connect(mapStateToProps)(Menu);","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/components/MenuComponent.js"],"names":["React","Component","Tile","connect","baseUrl","mapStateToProps","state","dishes","Menu","renderMenuItem","item","index","name","description","navigate","dishId","id","source","uri","image","props","navigation","isLoading","errMess","toString"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,SAAQC,IAAR,QAAmB,uBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACC;AADX,GAAP;AAGH,CAJD;;IAMMC,I;;;;;;;;;;;;;6BAEG;AACL,UAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAoB;AAAA,YAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,YAAXC,KAAW,QAAXA,KAAW;AACvC,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAED,IAAI,CAACE,IAAlB;AACU,UAAA,GAAG,EAAED,KADf;AAEU,UAAA,OAAO,EAAED,IAAI,CAACG,WAFxB;AAGU,UAAA,YAAY,EAAE,IAHxB;AAIU,UAAA,QAAQ,MAJlB;AAKU,UAAA,OAAO,EAAG;AAAA,mBAAMC,QAAQ,CAAC,YAAD,EAAe;AAACC,cAAAA,MAAM,EAAEL,IAAI,CAACM;AAAd,aAAf,CAAd;AAAA,WALpB;AAMU,UAAA,UAAU,EAAE;AAACC,YAAAA,MAAM,EAAE;AAACC,cAAAA,GAAG,EAAEd,OAAO,GAAGM,IAAI,CAACS;AAArB;AAAT,WANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,OAXD;;AADK,UAcEL,QAdF,GAcc,KAAKM,KAAL,CAAWC,UAdzB,CAcEP,QAdF;;AAeL,UAAI,KAAKM,KAAL,CAAWb,MAAX,CAAkBe,SAAtB,EAAiC;AAC7B,eACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJD,MAKK,IAAI,KAAKF,KAAL,CAAWb,MAAX,CAAkBgB,OAAtB,EAA+B;AAChC,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOH,KAAK,CAACb,MAAN,CAAagB,OAApB,CADJ,CADJ;AAKH,OANI,MAOA;AACD,eACI,oBAAC,QAAD;AACI,UAAA,IAAI,EAAE,KAAKH,KAAL,CAAWb,MAAX,CAAkBA,MAD5B;AAEI,UAAA,UAAU,EAAEE,cAFhB;AAGI,UAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACM,EAAL,CAAQQ,QAAR,EAAJ;AAAA,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;AACJ;;;;EAtCkBvB,S;;AA0CnB,eAAeE,OAAO,CAACE,eAAD,CAAP,CAA0BG,IAA1B,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport { FlatList} from \"react-native\";\r\nimport {Tile} from \"react-native-elements\";\r\nimport {connect} from \"react-redux\"\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes\r\n    }\r\n};\r\n\r\nclass Menu extends Component {\r\n\r\nrender() {\r\n    const renderMenuItem = ({item , index}) => {\r\n        return (\r\n            <Tile title={item.name}\r\n                      key={index}\r\n                      caption={item.description}\r\n                      hideChervron={true}\r\n                      featured\r\n                      onPress= {() => navigate('Dishdetail', {dishId: item.id})}\r\n                      leftAvatar={{source: {uri: baseUrl + item.image}}}\r\n            />\r\n        )\r\n    };\r\n\r\n    const {navigate} = this.props.navigation;\r\n    if (this.props.dishes.isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (this.props.dishes.errMess) {\r\n        return(\r\n            <View>\r\n                <Text>{props.dishes.errMess}</Text>\r\n            </View>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <FlatList\r\n                data={this.props.dishes.dishes}\r\n                renderItem={renderMenuItem}\r\n                keyExtractor={item => item.id.toString()}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps) (Menu);\r\n"]},"metadata":{},"sourceType":"module"}