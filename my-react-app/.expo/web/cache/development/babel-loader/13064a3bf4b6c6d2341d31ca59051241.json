{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michal\\\\WebstormProjects\\\\new_react\\\\my-react-app\\\\node_modules\\\\react-native-screens\\\\src\\\\native-stack\\\\views\\\\HeaderConfig.tsx\";\nimport * as React from 'react';\nimport { ScreenStackHeaderBackButtonImage, ScreenStackHeaderConfig, ScreenStackHeaderRightView, ScreenStackHeaderLeftView, ScreenStackHeaderCenterView } from 'react-native-screens';\nimport { useTheme } from '@react-navigation/native';\nexport default function HeaderConfig(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var route = props.route,\n      title = props.title,\n      headerRight = props.headerRight,\n      headerLeft = props.headerLeft,\n      headerCenter = props.headerCenter,\n      headerTitle = props.headerTitle,\n      headerBackTitle = props.headerBackTitle,\n      _props$headerBackTitl = props.headerBackTitleVisible,\n      headerBackTitleVisible = _props$headerBackTitl === void 0 ? true : _props$headerBackTitl,\n      backButtonImage = props.backButtonImage,\n      headerHideBackButton = props.headerHideBackButton,\n      headerHideShadow = props.headerHideShadow,\n      headerLargeTitleHideShadow = props.headerLargeTitleHideShadow,\n      headerTintColor = props.headerTintColor,\n      _props$headerTopInset = props.headerTopInsetEnabled,\n      headerTopInsetEnabled = _props$headerTopInset === void 0 ? true : _props$headerTopInset,\n      headerLargeTitle = props.headerLargeTitle,\n      headerTranslucent = props.headerTranslucent,\n      _props$headerStyle = props.headerStyle,\n      headerStyle = _props$headerStyle === void 0 ? {} : _props$headerStyle,\n      _props$headerLargeSty = props.headerLargeStyle,\n      headerLargeStyle = _props$headerLargeSty === void 0 ? {} : _props$headerLargeSty,\n      _props$headerTitleSty = props.headerTitleStyle,\n      headerTitleStyle = _props$headerTitleSty === void 0 ? {} : _props$headerTitleSty,\n      _props$headerLargeTit = props.headerLargeTitleStyle,\n      headerLargeTitleStyle = _props$headerLargeTit === void 0 ? {} : _props$headerLargeTit,\n      _props$headerBackTitl2 = props.headerBackTitleStyle,\n      headerBackTitleStyle = _props$headerBackTitl2 === void 0 ? {} : _props$headerBackTitl2,\n      headerShown = props.headerShown,\n      backButtonInCustomView = props.backButtonInCustomView;\n  return React.createElement(ScreenStackHeaderConfig, {\n    hidden: headerShown === false,\n    backButtonInCustomView: backButtonInCustomView,\n    translucent: headerTranslucent === true,\n    hideShadow: headerHideShadow,\n    largeTitleHideShadow: headerLargeTitleHideShadow,\n    hideBackButton: headerHideBackButton,\n    title: headerTitle !== undefined ? headerTitle : title !== undefined ? title : route.name,\n    titleFontFamily: headerTitleStyle.fontFamily,\n    titleFontSize: headerTitleStyle.fontSize,\n    titleColor: headerTitleStyle.color !== undefined ? headerTitleStyle.color : headerTintColor !== undefined ? headerTintColor : colors.text,\n    topInsetEnabled: headerTopInsetEnabled,\n    backTitle: headerBackTitleVisible ? headerBackTitle : ' ',\n    backTitleFontFamily: headerBackTitleStyle.fontFamily,\n    backTitleFontSize: headerBackTitleStyle.fontSize,\n    color: headerTintColor !== undefined ? headerTintColor : colors.primary,\n    largeTitle: headerLargeTitle,\n    largeTitleFontFamily: headerLargeTitleStyle.fontFamily,\n    largeTitleFontSize: headerLargeTitleStyle.fontSize,\n    largeTitleColor: headerLargeTitleStyle.color,\n    backgroundColor: headerStyle.backgroundColor !== undefined ? headerStyle.backgroundColor : colors.card,\n    largeTitleBackgroundColor: headerLargeStyle.backgroundColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, headerRight !== undefined ? React.createElement(ScreenStackHeaderRightView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, headerRight({\n    tintColor: headerTintColor != null ? headerTintColor : colors.primary\n  })) : null, backButtonImage !== undefined ? React.createElement(ScreenStackHeaderBackButtonImage, {\n    key: \"backImage\",\n    source: backButtonImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }) : null, headerLeft !== undefined ? React.createElement(ScreenStackHeaderLeftView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, headerLeft({\n    tintColor: headerTintColor != null ? headerTintColor : colors.primary\n  })) : null, headerCenter !== undefined ? React.createElement(ScreenStackHeaderCenterView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, headerCenter({\n    tintColor: headerTintColor != null ? headerTintColor : colors.primary\n  })) : null);\n}","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/node_modules/react-native-screens/src/native-stack/views/HeaderConfig.tsx"],"names":["React","ScreenStackHeaderBackButtonImage","ScreenStackHeaderConfig","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","useTheme","HeaderConfig","props","colors","route","title","headerRight","headerLeft","headerCenter","headerTitle","headerBackTitle","headerBackTitleVisible","backButtonImage","headerHideBackButton","headerHideShadow","headerLargeTitleHideShadow","headerTintColor","headerTopInsetEnabled","headerLargeTitle","headerTranslucent","headerStyle","headerLargeStyle","headerTitleStyle","headerLargeTitleStyle","headerBackTitleStyle","headerShown","backButtonInCustomView","undefined","name","fontFamily","fontSize","color","text","primary","backgroundColor","card","tintColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n} from 'react-native-screens';\nimport { Route, useTheme } from '@react-navigation/native';\nimport { NativeStackNavigationOptions } from '../types';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n};\n\nexport default function HeaderConfig(props: Props) {\n  const { colors } = useTheme();\n  const {\n    route,\n    title,\n    headerRight,\n    headerLeft,\n    headerCenter,\n    headerTitle,\n    headerBackTitle,\n    headerBackTitleVisible = true,\n    backButtonImage,\n    headerHideBackButton,\n    headerHideShadow,\n    headerLargeTitleHideShadow,\n    headerTintColor,\n    headerTopInsetEnabled = true,\n    headerLargeTitle,\n    headerTranslucent,\n    headerStyle = {},\n    headerLargeStyle = {},\n    headerTitleStyle = {},\n    headerLargeTitleStyle = {},\n    headerBackTitleStyle = {},\n    headerShown,\n    backButtonInCustomView,\n  } = props;\n\n  return (\n    <ScreenStackHeaderConfig\n      hidden={headerShown === false}\n      backButtonInCustomView={backButtonInCustomView}\n      translucent={headerTranslucent === true}\n      hideShadow={headerHideShadow}\n      largeTitleHideShadow={headerLargeTitleHideShadow}\n      hideBackButton={headerHideBackButton}\n      title={\n        headerTitle !== undefined\n          ? headerTitle\n          : title !== undefined\n          ? title\n          : route.name\n      }\n      titleFontFamily={headerTitleStyle.fontFamily}\n      titleFontSize={headerTitleStyle.fontSize}\n      titleColor={\n        headerTitleStyle.color !== undefined\n          ? headerTitleStyle.color\n          : headerTintColor !== undefined\n          ? headerTintColor\n          : colors.text\n      }\n      topInsetEnabled={headerTopInsetEnabled}\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={headerBackTitleStyle.fontFamily}\n      backTitleFontSize={headerBackTitleStyle.fontSize}\n      color={headerTintColor !== undefined ? headerTintColor : colors.primary}\n      largeTitle={headerLargeTitle}\n      largeTitleFontFamily={headerLargeTitleStyle.fontFamily}\n      largeTitleFontSize={headerLargeTitleStyle.fontSize}\n      largeTitleColor={headerLargeTitleStyle.color}\n      backgroundColor={\n        headerStyle.backgroundColor !== undefined\n          ? headerStyle.backgroundColor\n          : colors.card\n      }\n      largeTitleBackgroundColor={headerLargeStyle.backgroundColor}>\n      {headerRight !== undefined ? (\n        <ScreenStackHeaderRightView>\n          {headerRight({ tintColor: headerTintColor ?? colors.primary })}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {backButtonImage !== undefined ? (\n        <ScreenStackHeaderBackButtonImage\n          key=\"backImage\"\n          source={backButtonImage}\n        />\n      ) : null}\n      {headerLeft !== undefined ? (\n        <ScreenStackHeaderLeftView>\n          {headerLeft({ tintColor: headerTintColor ?? colors.primary })}\n        </ScreenStackHeaderLeftView>\n      ) : null}\n      {headerCenter !== undefined ? (\n        <ScreenStackHeaderCenterView>\n          {headerCenter({ tintColor: headerTintColor ?? colors.primary })}\n        </ScreenStackHeaderCenterView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}