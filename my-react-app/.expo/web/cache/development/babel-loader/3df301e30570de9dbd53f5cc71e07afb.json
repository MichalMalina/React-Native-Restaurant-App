{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michal\\\\WebstormProjects\\\\new_react\\\\my-react-app\\\\components\\\\LoginComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Icon, Input, CheckBox, Button } from \"react-native-elements\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { Permission } from \"react-native-web/dist/index\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { baseUrl } from \"../shared/baseUrl\";\nimport * as Permissions from \"expo-permissions\";\n\nvar LoginTab = function (_Component) {\n  _inherits(LoginTab, _Component);\n\n  var _super = _createSuper(LoginTab);\n\n  function LoginTab(props) {\n    var _this;\n\n    _classCallCheck(this, LoginTab);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      remember: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginTab, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      SecureStore.getItemAsync(\"userinfo\").then(function (userdata) {\n        var userinfo = JSON.parse(userdata);\n\n        if (userinfo) {\n          _this2.setState({\n            username: userinfo.username\n          });\n\n          _this2.setState({\n            password: userinfo.password\n          });\n\n          _this2.setState({\n            remember: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      console.log(JSON.stringify(this.state));\n\n      if (this.state.remember) {\n        SecureStore.setItemAsync(\"userinfo\", JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })).catch(function (error) {\n          return console.log(\"Could not save user info\", error);\n        });\n      } else {\n        SecureStore.deleteItemAsync(\"userinfo\").catch(function (error) {\n          return console.log(\"Could not delete user info\", error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Username\",\n        value: this.state.username,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            username: text\n          });\n        },\n        leftIcon: {\n          type: \"font-awesome\",\n          name: \"user-o\"\n        },\n        inputContainerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }\n      }), React.createElement(Input, {\n        placeholder: \"password\",\n        value: this.state.password,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            password: text\n          });\n        },\n        leftIcon: {\n          type: \"font-awesome\",\n          name: \"key\"\n        },\n        inputContainerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }\n      }), React.createElement(CheckBox, {\n        checked: this.state.remember,\n        center: true,\n        onPress: function onPress() {\n          return _this3.setState({\n            remember: !_this3.state.remember\n          });\n        },\n        containerStyle: styles.formCheckbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }\n      }), React.createElement(View, {\n        style: styles.formButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, React.createElement(Button, {\n        title: \"Login\",\n        onPress: function onPress() {\n          return _this3.handleLogin();\n        },\n        color: \"#512DA8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        title: \"Register\",\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('Register');\n        },\n        clear: true,\n        icon: React.createElement(Icon, {\n          name: \"user-plus\",\n          type: \"font-awesome\",\n          size: 24,\n          color: \"blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return LoginTab;\n}(Component);\n\nvar RegisterTab = function (_Component2) {\n  _inherits(RegisterTab, _Component2);\n\n  var _super2 = _createSuper(RegisterTab);\n\n  function RegisterTab(props) {\n    var _this4;\n\n    _classCallCheck(this, RegisterTab);\n\n    _this4 = _super2.call(this, props);\n\n    _this4.getImageFromCamera = function _callee() {\n      var cameraPermission, cameraRollPermission, capturedImage;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              cameraPermission = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 5:\n              cameraRollPermission = _context.sent;\n\n              if (!(cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted')) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                aspect: [4, 3]\n              }));\n\n            case 9:\n              capturedImage = _context.sent;\n\n              if (!capturedImage.cancelled) {\n                console.log(capturedImage);\n\n                _this4.setState({\n                  imageUrl: capturedImage.uri\n                });\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this4.state = {\n      username: '',\n      password: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      remember: false,\n      imageUrl: baseUrl + 'images/logo.png'\n    };\n    return _this4;\n  }\n\n  _createClass(RegisterTab, [{\n    key: \"handleRegister\",\n    value: function handleRegister() {\n      console.log(JSON.stringify(this.state));\n      if (this.state.remember) SecureStore.setItemAsync('userinfo', JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      })).catch(function (error) {\n        return console.log('Could not save user info', error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: this.state.imageUrl\n        },\n        loadingIndicatorSource: require(\"./images/logo.png\"),\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }), React.createElement(Button, {\n        title: \"Camera\",\n        onPress: this.getImageFromCamera,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      })), React.createElement(Input, {\n        placeholder: \"Username\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'user-o'\n        },\n        onChangeText: function onChangeText(username) {\n          return _this5.setState({\n            username: username\n          });\n        },\n        value: this.state.username,\n        containerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Password\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'key'\n        },\n        onChangeText: function onChangeText(password) {\n          return _this5.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        containerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholder: \"First Name\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'user-o'\n        },\n        onChangeText: function onChangeText(lastname) {\n          return _this5.setState({\n            firstname: firstname\n          });\n        },\n        value: this.state.firstname,\n        containerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Last Name\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'user-o'\n        },\n        onChangeText: function onChangeText(lastname) {\n          return _this5.setState({\n            lastname: lastname\n          });\n        },\n        value: this.state.lastname,\n        containerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Email\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: 'envelope-o'\n        },\n        onChangeText: function onChangeText(email) {\n          return _this5.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        containerStyle: styles.formInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }), React.createElement(CheckBox, {\n        title: \"Remember Me\",\n        center: true,\n        checked: this.state.remember,\n        onPress: function onPress() {\n          return _this5.setState({\n            remember: !_this5.state.remember\n          });\n        },\n        containerStyle: styles.formCheckbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.formButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return _this5.handleRegister();\n        },\n        title: \"Register\",\n        icon: React.createElement(Icon, {\n          name: \"user-plus\",\n          type: \"font-awesome\",\n          size: 24,\n          color: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }\n        }),\n        buttonStyle: {\n          backgroundColor: \"#512DA8\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return RegisterTab;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    margin: 20\n  },\n  formInput: {\n    margin: 40\n  },\n  formCheckbox: {\n    margin: 40,\n    backgroundColor: null\n  },\n  formButton: {\n    margin: 60\n  }\n});\nvar tabNavigator = createBottomTabNavigator();\n\nfunction LoginNav() {\n  return React.createElement(NavigationContainer, {\n    independent: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, React.createElement(tabNavigator.Navigator, {\n    initialRouteName: \"Login\",\n    tabBarOptions: {\n      activeBackgroundColor: '#9575CD',\n      inactiveBackgroundColor: '#D1C4E9',\n      activeTintColor: '#ffffff',\n      inactiveTintColor: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, React.createElement(tabNavigator.Screen, {\n    name: \"Login\",\n    component: LoginTab,\n    options: {\n      title: 'Login',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var tintColor = _ref.tintColor;\n        return React.createElement(Icon, {\n          name: \"sign-in\",\n          type: \"font-awesome\",\n          size: 24,\n          iconStyle: {\n            color: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }), React.createElement(tabNavigator.Screen, {\n    name: \"Register\",\n    component: RegisterTab,\n    options: {\n      title: 'Register',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var tintColor = _ref2.tintColor;\n        return React.createElement(Icon, {\n          name: \"user-plus\",\n          type: \"font-awesome\",\n          size: 24,\n          iconStyle: {\n            color: tintColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default LoginTab;","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/components/LoginComponent.js"],"names":["React","Component","Icon","Input","CheckBox","Button","SecureStore","Permission","ImagePicker","NavigationContainer","createBottomTabNavigator","baseUrl","Permissions","LoginTab","props","state","username","password","remember","getItemAsync","then","userdata","userinfo","JSON","parse","setState","console","log","stringify","setItemAsync","catch","error","deleteItemAsync","styles","container","text","type","name","formInput","formCheckbox","formButton","handleLogin","navigation","navigate","RegisterTab","getImageFromCamera","askAsync","CAMERA","cameraPermission","CAMERA_ROLL","cameraRollPermission","status","launchCameraAsync","allowsEditing","aspect","capturedImage","cancelled","imageUrl","uri","firstname","lastname","email","imageContainer","require","image","handleRegister","backgroundColor","StyleSheet","create","justifyContent","margin","tabNavigator","LoginNav","activeBackgroundColor","inactiveBackgroundColor","activeTintColor","inactiveTintColor","title","tabBarIcon","tintColor","color"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport { View, StyleSheet, Text, ScrollView, Image } from 'react-native';\r\nimport {Icon , Input , CheckBox, Button} from \"react-native-elements\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\nimport {Permission } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\"\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\n\r\nimport * as Permissions from \"expo-permissions\"\r\n\r\n\r\n\r\nclass LoginTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username:\"\",\r\n            password:\"\",\r\n            remember: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       SecureStore.getItemAsync(\"userinfo\").then((userdata) => {\r\n           let userinfo = JSON.parse(userdata);\r\n           if(userinfo) {\r\n               this.setState({username: userinfo.username});\r\n               this.setState({password: userinfo.password});\r\n               this.setState({remember: true})\r\n           }\r\n       })\r\n    }\r\n\r\n    handleLogin() {\r\n        console.log(JSON.stringify(this.state));\r\n        if(this.state.remember) {\r\n            SecureStore.setItemAsync(\"userinfo\" , JSON.stringify({username:this.state.username , password:this.state.password}))\r\n                .catch((error) => console.log(\"Could not save user info\" , error));}\r\n            else {SecureStore.deleteItemAsync(\"userinfo\")\r\n            .catch((error) => console.log(\"Could not delete user info\", error));\r\n            }\r\n        }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ScrollView style={styles.container}>\r\n                   <Input\r\n                        placeholder=\"Username\"\r\n                        value={this.state.username}\r\n                        onChangeText={(text) => this.setState({username:text})}\r\n                        leftIcon={{type:\"font-awesome\" , name:\"user-o\"}}\r\n                        inputContainerStyle={styles.formInput}\r\n                   />\r\n                   <Input\r\n                        placeholder=\"password\"\r\n                        value={this.state.password}\r\n                        onChangeText = {(text) => this.setState({password:text})}\r\n                        leftIcon={{type:\"font-awesome\" , name:\"key\"}}\r\n                        inputContainerStyle={styles.formInput}\r\n                   />\r\n                   <CheckBox\r\n                       checked={this.state.remember}\r\n                       center\r\n                       onPress={() => this.setState({remember: !this.state.remember})}\r\n                       containerStyle={styles.formCheckbox}\r\n                   />\r\n                  <View style={styles.formButton}>\r\n                        <Button\r\n                            title=\"Login\"\r\n                            onPress={() => this.handleLogin()}\r\n                            color=\"#512DA8\"\r\n                        />\r\n                  </View>\r\n\r\n                <View>\r\n                <Button title=\"Register\"  onPress={() => this.props.navigation.navigate('Register')} clear\r\n                        icon = {<Icon name=\"user-plus\" type=\"font-awesome\" size={24} color=\"blue\"/> }/>\r\n                </View>\r\n\r\n            </ScrollView>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass RegisterTab extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            firstname: '',\r\n            lastname: '',\r\n            email: '',\r\n            remember: false,\r\n            imageUrl: baseUrl + 'images/logo.png'\r\n        }\r\n    }\r\n\r\n    getImageFromCamera = async () => {\r\n        const cameraPermission = await Permissions.askAsync(Permissions.CAMERA);\r\n        const cameraRollPermission = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n\r\n        if (cameraPermission.status === 'granted' && cameraRollPermission.status === 'granted') {\r\n            let capturedImage = await ImagePicker.launchCameraAsync({\r\n                allowsEditing: true,\r\n                aspect: [4, 3],\r\n            });\r\n            if (!capturedImage.cancelled) {\r\n                console.log(capturedImage);\r\n                this.setState({imageUrl: capturedImage.uri });\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    handleRegister() {\r\n        console.log(JSON.stringify(this.state));\r\n        if (this.state.remember)\r\n            SecureStore.setItemAsync('userinfo', JSON.stringify({username: this.state.username, password: this.state.password}))\r\n                .catch((error) => console.log('Could not save user info', error));\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <ScrollView>\r\n                <View style={styles.container}>\r\n                    <View style={styles.imageContainer}>\r\n                        <Image\r\n                            source={{uri: this.state.imageUrl}}\r\n                            loadingIndicatorSource={require('./images/logo.png')}\r\n                            style={styles.image}\r\n                        />\r\n                        <Button\r\n                            title=\"Camera\"\r\n                            onPress={this.getImageFromCamera}\r\n                        />\r\n                    </View>\r\n                    <Input\r\n                        placeholder=\"Username\"\r\n                        leftIcon={{ type: 'font-awesome', name: 'user-o' }}\r\n                        onChangeText={(username) => this.setState({username})}\r\n                        value={this.state.username}\r\n                        containerStyle={styles.formInput}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"Password\"\r\n                        leftIcon={{ type: 'font-awesome', name: 'key' }}\r\n                        onChangeText={(password) => this.setState({password})}\r\n                        value={this.state.password}\r\n                        containerStyle={styles.formInput}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"First Name\"\r\n                        leftIcon={{ type: 'font-awesome', name: 'user-o' }}\r\n                        onChangeText={(lastname) => this.setState({firstname})}\r\n                        value={this.state.firstname}\r\n                        containerStyle={styles.formInput}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"Last Name\"\r\n                        leftIcon={{ type: 'font-awesome', name: 'user-o' }}\r\n                        onChangeText={(lastname) => this.setState({lastname})}\r\n                        value={this.state.lastname}\r\n                        containerStyle={styles.formInput}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"Email\"\r\n                        leftIcon={{ type: 'font-awesome', name: 'envelope-o' }}\r\n                        onChangeText={(email) => this.setState({email})}\r\n                        value={this.state.email}\r\n                        containerStyle={styles.formInput}\r\n                    />\r\n                    <CheckBox title=\"Remember Me\"\r\n                              center\r\n                              checked={this.state.remember}\r\n                              onPress={() => this.setState({remember: !this.state.remember})}\r\n                              containerStyle={styles.formCheckbox}\r\n                    />\r\n                    <View style={styles.formButton}>\r\n                        <Button\r\n                            onPress={() => this.handleRegister()}\r\n                            title=\"Register\"\r\n                            icon={\r\n                                <Icon\r\n                                    name='user-plus'\r\n                                    type='font-awesome'\r\n                                    size={24}\r\n                                    color= 'white'\r\n                                />\r\n                            }\r\n                            buttonStyle={{\r\n                                backgroundColor: \"#512DA8\"\r\n                            }}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'center',\r\n        margin: 20,\r\n    },\r\n    formInput: {\r\n        margin:40\r\n    },\r\n    formCheckbox: {\r\n        margin: 40,\r\n        backgroundColor: null\r\n    },\r\n    formButton: {\r\n        margin: 60\r\n    }\r\n});\r\n\r\n\r\nconst tabNavigator = createBottomTabNavigator();\r\n\r\nfunction LoginNav() {\r\n    return(\r\n        <NavigationContainer independent={true}>\r\n            <tabNavigator.Navigator\r\n                initialRouteName='Login'\r\n                tabBarOptions={{\r\n                    activeBackgroundColor: '#9575CD',\r\n                    inactiveBackgroundColor: '#D1C4E9',\r\n                    activeTintColor: '#ffffff',\r\n                    inactiveTintColor: 'gray'\r\n                }}>\r\n                <tabNavigator.Screen\r\n                    name='Login'\r\n                    component={LoginTab}\r\n                    options={{\r\n                        title: 'Login',\r\n                        tabBarIcon:({ tintColor }) => (\r\n                            <Icon\r\n                                name='sign-in'\r\n                                type='font-awesome'\r\n                                size={24}\r\n                                iconStyle={{ color: tintColor }}\r\n                            />\r\n                        )\r\n                    }}\r\n                />\r\n                <tabNavigator.Screen\r\n                    name='Register'\r\n                    component={RegisterTab}\r\n                    options={{\r\n                        title: 'Register',\r\n                        tabBarIcon:({ tintColor }) => (\r\n                            <Icon\r\n                                name='user-plus'\r\n                                type='font-awesome'\r\n                                size={24}\r\n                                iconStyle={{ color: tintColor }}\r\n                            />\r\n                        )\r\n                    }}\r\n                />\r\n            </tabNavigator.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default LoginTab;\r\n"]},"metadata":{},"sourceType":"module"}