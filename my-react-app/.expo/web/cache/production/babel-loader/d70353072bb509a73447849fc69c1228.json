{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from\"react\";import View from\"react-native-web/dist/exports/View\";import FlatList from\"react-native-web/dist/exports/FlatList\";import Text from\"react-native-web/dist/exports/Text\";import Alert from\"react-native-web/dist/exports/Alert\";import{ListItem}from\"react-native-elements\";import Loading from\"./LoadingComponent\";import{connect}from\"react-redux\";import{baseUrl}from\"../shared/baseUrl\";import{deleteFavorite as _deleteFavorite}from\"../redux/ActionCreators\";import*as Animatable from\"react-native-animatable\";var mapStateToProps=function mapStateToProps(state){return{dishes:state.dishes,favorites:state.favorites};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{deleteFavorite:function deleteFavorite(dishId){return dispatch(_deleteFavorite(dishId));}};};var Favorites=function(_Component){_inherits(Favorites,_Component);var _super=_createSuper(Favorites);function Favorites(){_classCallCheck(this,Favorites);return _super.apply(this,arguments);}_createClass(Favorites,[{key:\"render\",value:function render(){var _this=this;var navigate=this.props.navigation.navigate;var renderMenuItem=function renderMenuItem(_ref){var item=_ref.item,index=_ref.index;return React.createElement(Animatable.View,{animation:\"fadeInRightBig\",duration:2000},React.createElement(ListItem,{key:index,title:item.name,subtitle:item.description,hideChevron:true,onPress:function onPress(){return navigate('Dishdetail',{dishId:item.id});},leftAvatar:{source:{uri:baseUrl+item.image}}}));};if(this.props.dishes.isLoading){return React.createElement(Loading,null);}else if(this.props.dishes.errMess){return React.createElement(View,null,React.createElement(Text,null,this.props.dishes.errMess));}else{return React.createElement(FlatList,{data:this.props.dishes.dishes.filter(function(dish){return _this.props.favorites.some(function(el){return el===dish.id;});}),renderItem:renderMenuItem,keyExtractor:function keyExtractor(item){return item.id.toString();}});}}}]);return Favorites;}(Component);export default connect(mapStateToProps,mapDispatchToProps)(Favorites);","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/components/FavoriteComponent.js"],"names":["React","Component","ListItem","Loading","connect","baseUrl","deleteFavorite","Animatable","mapStateToProps","state","dishes","favorites","mapDispatchToProps","dispatch","dishId","Favorites","navigate","props","navigation","renderMenuItem","item","index","name","description","id","source","uri","image","isLoading","errMess","filter","dish","some","el","toString"],"mappings":"ggCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAgC,OAAhC,C,8NAEA,OAAQC,QAAR,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,OAAP,0BACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,OAAR,yBACA,OAAQC,cAAc,GAAdA,CAAAA,eAAR,+BACA,MAAO,GAAKC,CAAAA,UAAZ,KAA4B,yBAA5B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAO,CACHC,MAAM,CAAED,KAAK,CAACC,MADX,CAEHC,SAAS,CAAEF,KAAK,CAACE,SAFd,CAAP,CAIH,CALD,CAOA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CAClCP,cAAc,CAAE,wBAACQ,MAAD,QAAYD,CAAAA,QAAQ,CAACP,eAAc,CAACQ,MAAD,CAAf,CAApB,EADkB,CAAf,EAA3B,C,GAKMC,CAAAA,S,gPAEO,mBACEC,CAAAA,QADF,CACc,KAAKC,KAAL,CAAWC,UADzB,CACEF,QADF,CAGL,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAoB,IAAlBC,CAAAA,IAAkB,MAAlBA,IAAkB,CAAXC,KAAW,MAAXA,KAAW,CA2BvC,MACI,qBAAC,UAAD,CAAY,IAAZ,EAAiB,SAAS,CAAC,gBAA3B,CAA4C,QAAQ,CAAE,IAAtD,EACA,oBAAC,QAAD,EACI,GAAG,CAAEA,KADT,CAEI,KAAK,CAAED,IAAI,CAACE,IAFhB,CAGI,QAAQ,CAAEF,IAAI,CAACG,WAHnB,CAII,WAAW,CAAE,IAJjB,CAKI,OAAO,CAAE,yBAAMP,CAAAA,QAAQ,CAAC,YAAD,CAAe,CAAEF,MAAM,CAAEM,IAAI,CAACI,EAAf,CAAf,CAAd,EALb,CAMI,UAAU,CAAE,CAACC,MAAM,CAAE,CAACC,GAAG,CAACrB,OAAO,CAAGe,IAAI,CAACO,KAApB,CAAT,CANhB,EADA,CADJ,CAYH,CAvCD,CAyCA,GAAG,KAAKV,KAAL,CAAWP,MAAX,CAAkBkB,SAArB,CACA,CACI,MAAQ,qBAAC,OAAD,MAAR,CACH,CAHD,IAKK,IAAG,KAAKX,KAAL,CAAWP,MAAX,CAAkBmB,OAArB,CACL,CAAC,MAAQ,qBAAC,IAAD,MAAM,oBAAC,IAAD,MAAO,KAAKZ,KAAL,CAAWP,MAAX,CAAkBmB,OAAzB,CAAN,CAAR,CAA+D,CAD3D,IAIA,CACD,MACI,qBAAC,QAAD,EAAU,IAAI,CAAE,KAAKZ,KAAL,CAAWP,MAAX,CAAkBA,MAAlB,CAAyBoB,MAAzB,CAAgC,SAAAC,IAAI,QAAI,CAAA,KAAI,CAACd,KAAL,CAAWN,SAAX,CAAqBqB,IAArB,CAA0B,SAAAC,EAAE,QAAIA,CAAAA,EAAE,GAAKF,IAAI,CAACP,EAAhB,EAA5B,CAAJ,EAApC,CAAhB,CACU,UAAU,CAAEL,cADtB,CAEU,YAAY,CAAE,sBAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACI,EAAL,CAAQU,QAAR,EAAJ,EAF5B,EADJ,CAMH,CACJ,C,uBA/DmBjC,S,EAmExB,cAAeG,CAAAA,OAAO,CAACI,eAAD,CAAmBI,kBAAnB,CAAP,CAA8CG,SAA9C,CAAf","sourcesContent":["import React , {Component} from \"react\"\r\nimport {View , FlatList , Text , Alert } from \"react-native\";\r\nimport {ListItem} from \"react-native-elements\";\r\nimport Loading from \"./LoadingComponent\"\r\nimport {connect} from \"react-redux\";\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\nimport {deleteFavorite} from \"../redux/ActionCreators\";\r\nimport * as Animatable from \"react-native-animatable\"\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        favorites: state.favorites\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n        deleteFavorite :(dishId) => dispatch(deleteFavorite(dishId))\r\n    }\r\n);\r\n\r\nclass Favorites extends Component {\r\n\r\n    render() {\r\n        const {navigate} = this.props.navigation;\r\n\r\n        const renderMenuItem = ({item , index}) => {\r\n         /*   const rightButton = [\r\n                {\r\n                    text: 'Delete',\r\n                    type: 'delete',\r\n                    onPress: () => {\r\n                        Alert.alert(\r\n                            'Delete Favorite?',\r\n                            'Are you sure you wish to delete the favorite dish ' + item.name + '?',\r\n                            [\r\n                                {\r\n                                    text: 'Cancel',\r\n                                    onPress: () => console.log(item.name + 'Not Deleted'),\r\n                                    style: ' cancel'\r\n                                },\r\n                                {\r\n                                    text: 'OK',\r\n                                    onPress: () => this.props.deleteFavorite(item.id)\r\n                                }\r\n                            ],\r\n                            { cancelable: false }\r\n                        );\r\n\r\n                    }\r\n                }\r\n            ];*/\r\n\r\n            return(\r\n                <Animatable.View animation=\"fadeInRightBig\" duration={2000}>\r\n                <ListItem\r\n                    key={index}\r\n                    title={item.name}\r\n                    subtitle={item.description}\r\n                    hideChevron={true}\r\n                    onPress={() => navigate('Dishdetail', { dishId: item.id })}\r\n                    leftAvatar={{source: {uri:baseUrl + item.image}}}\r\n                />\r\n                </Animatable.View>\r\n            )\r\n        };\r\n\r\n        if(this.props.dishes.isLoading)\r\n        {\r\n            return (<Loading/>)\r\n        }\r\n\r\n        else if(this.props.dishes.errMess)\r\n        {return (<View><Text>{this.props.dishes.errMess}</Text></View>)}\r\n\r\n\r\n        else {\r\n            return (\r\n                <FlatList data={this.props.dishes.dishes.filter(dish => this.props.favorites.some(el => el === dish.id))}\r\n                          renderItem={renderMenuItem}\r\n                          keyExtractor={item => item.id.toString()}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(Favorites);\r\n"]},"metadata":{},"sourceType":"module"}