{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import*as ActionTypes from\"./ActionTypes\";export var comments=function comments(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{errMess:null,comments:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ActionTypes.ADD_COMMENTS:return _objectSpread(_objectSpread({},state),{},{errMess:null,comments:action.payload});case ActionTypes.COMMENTS_FAILED:return _objectSpread(_objectSpread({},state),{},{errMess:action.payload});default:return state;}};","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/redux/comments.js"],"names":["ActionTypes","comments","state","errMess","action","type","ADD_COMMENTS","payload","COMMENTS_FAILED"],"mappings":"+1BAAA,MAAO,GAAKA,CAAAA,WAAZ,qBAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAmD,IAAlDC,CAAAA,KAAkD,2DAA1C,CAAEC,OAAO,CAAE,IAAX,CAAiBF,QAAQ,CAAC,EAA1B,CAA0C,IAAXG,CAAAA,MAAW,2CACvE,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKL,CAAAA,WAAW,CAACM,YAAjB,CACI,sCAAWJ,KAAX,MAAkBC,OAAO,CAAE,IAA3B,CAAiCF,QAAQ,CAAEG,MAAM,CAACG,OAAlD,GAEJ,IAAKP,CAAAA,WAAW,CAACQ,eAAjB,CACI,sCAAWN,KAAX,MAAkBC,OAAO,CAAEC,MAAM,CAACG,OAAlC,GAEJ,QACI,MAAOL,CAAAA,KAAP,CARR,CAUH,CAXM","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}