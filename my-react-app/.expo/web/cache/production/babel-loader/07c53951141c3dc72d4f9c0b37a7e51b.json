{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import PropTypes from'prop-types';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Modal from\"react-native-web/dist/exports/Modal\";import View from\"react-native-web/dist/exports/View\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import{withTheme}from\"../config\";import{ScreenWidth,ScreenHeight,isIOS}from\"../helpers\";import Triangle from\"./Triangle\";import getTooltipCoordinate,{getElementVisibleWidth}from\"./getTooltipCoordinate\";var Tooltip=function(_React$PureComponent){_inherits(Tooltip,_React$PureComponent);var _super=_createSuper(Tooltip);function Tooltip(){var _this;_classCallCheck(this,Tooltip);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isVisible:false,yOffset:0,xOffset:0,elementWidth:0,elementHeight:0};_this.toggleTooltip=function(){var onClose=_this.props.onClose;_this.getElementPosition();_this.setState(function(prevState){if(prevState.isVisible&&!isIOS){onClose&&onClose();}return{isVisible:!prevState.isVisible};});};_this.wrapWithPress=function(toggleOnPress,toggleAction,children){if(toggleOnPress){return React.createElement(TouchableOpacity,_extends({},_defineProperty({},toggleAction,_this.toggleTooltip),{delayLongPress:250,activeOpacity:1}),children);}return children;};_this.getTooltipStyle=function(){var _objectSpread2;var _this$state=_this.state,yOffset=_this$state.yOffset,xOffset=_this$state.xOffset,elementHeight=_this$state.elementHeight,elementWidth=_this$state.elementWidth;var _this$props=_this.props,height=_this$props.height,backgroundColor=_this$props.backgroundColor,width=_this$props.width,withPointer=_this$props.withPointer,containerStyle=_this$props.containerStyle;var _getTooltipCoordinate=getTooltipCoordinate(xOffset,yOffset,elementWidth,elementHeight,ScreenWidth,ScreenHeight,width,height,withPointer),x=_getTooltipCoordinate.x,y=_getTooltipCoordinate.y;return _objectSpread((_objectSpread2={position:'absolute'},_defineProperty(_objectSpread2,I18nManager.isRTL?'right':'left',x),_defineProperty(_objectSpread2,\"top\",y),_defineProperty(_objectSpread2,\"width\",width),_defineProperty(_objectSpread2,\"height\",height),_defineProperty(_objectSpread2,\"backgroundColor\",backgroundColor),_defineProperty(_objectSpread2,\"display\",'flex'),_defineProperty(_objectSpread2,\"alignItems\",'center'),_defineProperty(_objectSpread2,\"justifyContent\",'center'),_defineProperty(_objectSpread2,\"flex\",1),_defineProperty(_objectSpread2,\"borderRadius\",10),_defineProperty(_objectSpread2,\"padding\",10),_objectSpread2),containerStyle);};_this.renderPointer=function(tooltipY){var _this$state2=_this.state,yOffset=_this$state2.yOffset,xOffset=_this$state2.xOffset,elementHeight=_this$state2.elementHeight,elementWidth=_this$state2.elementWidth;var _this$props2=_this.props,backgroundColor=_this$props2.backgroundColor,pointerColor=_this$props2.pointerColor;var pastMiddleLine=yOffset>tooltipY;return React.createElement(View,{style:_defineProperty({position:'absolute',top:pastMiddleLine?yOffset-13:yOffset+elementHeight-2},I18nManager.isRTL?'right':'left',xOffset+getElementVisibleWidth(elementWidth,xOffset,ScreenWidth)/2-7.5)},React.createElement(Triangle,{style:{borderBottomColor:pointerColor||backgroundColor},isDown:pastMiddleLine}));};_this.renderContent=function(withTooltip){var _ref3;var _this$props3=_this.props,popover=_this$props3.popover,withPointer=_this$props3.withPointer,toggleOnPress=_this$props3.toggleOnPress,toggleAction=_this$props3.toggleAction,highlightColor=_this$props3.highlightColor;if(!withTooltip){return _this.wrapWithPress(toggleOnPress,toggleAction,_this.props.children);}var _this$state3=_this.state,yOffset=_this$state3.yOffset,xOffset=_this$state3.xOffset,elementWidth=_this$state3.elementWidth,elementHeight=_this$state3.elementHeight;var tooltipStyle=_this.getTooltipStyle();return React.createElement(View,null,React.createElement(View,{style:(_ref3={position:'absolute',top:yOffset},_defineProperty(_ref3,I18nManager.isRTL?'right':'left',xOffset),_defineProperty(_ref3,\"backgroundColor\",highlightColor),_defineProperty(_ref3,\"overflow\",'visible'),_defineProperty(_ref3,\"width\",elementWidth),_defineProperty(_ref3,\"height\",elementHeight),_ref3)},_this.props.children),withPointer&&_this.renderPointer(tooltipStyle.top),React.createElement(View,{style:tooltipStyle,testID:\"tooltipPopoverContainer\"},popover));};_this.getElementPosition=function(){var skipAndroidStatusBar=_this.props.skipAndroidStatusBar;_this.renderedElement&&_this.renderedElement.measure(function(frameOffsetX,frameOffsetY,width,height,pageOffsetX,pageOffsetY){_this.setState({xOffset:pageOffsetX,yOffset:isIOS||skipAndroidStatusBar?pageOffsetY:pageOffsetY-StatusBar.currentHeight,elementWidth:width,elementHeight:height});});};return _this;}_createClass(Tooltip,[{key:\"componentDidMount\",value:function componentDidMount(){setTimeout(this.getElementPosition,500);}},{key:\"render\",value:function render(){var _this2=this;var isVisible=this.state.isVisible;var _this$props4=this.props,onClose=_this$props4.onClose,withOverlay=_this$props4.withOverlay,overlayColor=_this$props4.overlayColor,onOpen=_this$props4.onOpen,ModalComponent=_this$props4.ModalComponent;return React.createElement(View,{collapsable:false,ref:function ref(e){_this2.renderedElement=e;}},this.renderContent(false),React.createElement(ModalComponent,{animationType:\"fade\",visible:isVisible,transparent:true,onDismiss:onClose,onShow:onOpen,onRequestClose:onClose},React.createElement(TouchableOpacity,{style:styles.container(withOverlay,overlayColor),onPress:this.toggleTooltip,activeOpacity:1},this.renderContent(true))));}}]);return Tooltip;}(React.PureComponent);Tooltip.propTypes={children:PropTypes.element,withPointer:PropTypes.bool,popover:PropTypes.element,toggleOnPress:PropTypes.bool,toggleAction:PropTypes.oneOf(['onPress','onLongPress']),height:PropTypes.number,width:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),containerStyle:PropTypes.oneOfType([PropTypes.object,PropTypes.array]),pointerColor:PropTypes.string,onClose:PropTypes.func,onOpen:PropTypes.func,overlayColor:PropTypes.string,withOverlay:PropTypes.bool,backgroundColor:PropTypes.string,highlightColor:PropTypes.string,skipAndroidStatusBar:PropTypes.bool,ModalComponent:PropTypes.elementType};Tooltip.defaultProps={withOverlay:true,overlayColor:'rgba(250, 250, 250, 0.70)',highlightColor:'transparent',withPointer:true,toggleOnPress:true,toggleAction:'onPress',height:40,width:150,containerStyle:{},backgroundColor:'#617080',onClose:function onClose(){},onOpen:function onOpen(){},skipAndroidStatusBar:false,ModalComponent:Modal};var styles={container:function container(withOverlay,overlayColor){return{backgroundColor:withOverlay?overlayColor:'transparent',flex:1};}};export{Tooltip};export default withTheme(Tooltip,'Tooltip');","map":{"version":3,"sources":["C:/Users/Michal/WebstormProjects/new_react/my-react-app/node_modules/react-native-elements/src/tooltip/Tooltip.js"],"names":["React","PropTypes","withTheme","ScreenWidth","ScreenHeight","isIOS","Triangle","getTooltipCoordinate","getElementVisibleWidth","Tooltip","state","isVisible","yOffset","xOffset","elementWidth","elementHeight","toggleTooltip","onClose","props","getElementPosition","setState","prevState","wrapWithPress","toggleOnPress","toggleAction","children","getTooltipStyle","height","backgroundColor","width","withPointer","containerStyle","x","y","position","I18nManager","isRTL","renderPointer","tooltipY","pointerColor","pastMiddleLine","top","borderBottomColor","renderContent","withTooltip","popover","highlightColor","tooltipStyle","skipAndroidStatusBar","renderedElement","measure","frameOffsetX","frameOffsetY","pageOffsetX","pageOffsetY","StatusBar","currentHeight","setTimeout","withOverlay","overlayColor","onOpen","ModalComponent","e","styles","container","PureComponent","propTypes","element","bool","oneOf","number","oneOfType","string","object","array","func","elementType","defaultProps","Modal","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableOpacity,\n  Modal,\n  View,\n  StatusBar,\n  I18nManager,\n} from 'react-native';\n\nimport { withTheme } from '../config';\nimport { ScreenWidth, ScreenHeight, isIOS } from '../helpers';\n\nimport Triangle from './Triangle';\nimport getTooltipCoordinate, {\n  getElementVisibleWidth,\n} from './getTooltipCoordinate';\n\nclass Tooltip extends React.PureComponent {\n  state = {\n    isVisible: false,\n    yOffset: 0,\n    xOffset: 0,\n    elementWidth: 0,\n    elementHeight: 0,\n  };\n\n  renderedElement;\n\n  toggleTooltip = () => {\n    const { onClose } = this.props;\n    this.getElementPosition();\n    this.setState((prevState) => {\n      if (prevState.isVisible && !isIOS) {\n        onClose && onClose();\n      }\n\n      return { isVisible: !prevState.isVisible };\n    });\n  };\n\n  wrapWithPress = (toggleOnPress, toggleAction, children) => {\n    if (toggleOnPress) {\n      return (\n        <TouchableOpacity\n          {...{ [toggleAction]: this.toggleTooltip }}\n          delayLongPress={250}\n          activeOpacity={1}\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    }\n\n    return children;\n  };\n\n  getTooltipStyle = () => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const {\n      height,\n      backgroundColor,\n      width,\n      withPointer,\n      containerStyle,\n    } = this.props;\n\n    const { x, y } = getTooltipCoordinate(\n      xOffset,\n      yOffset,\n      elementWidth,\n      elementHeight,\n      ScreenWidth,\n      ScreenHeight,\n      width,\n      height,\n      withPointer\n    );\n\n    return {\n      position: 'absolute',\n      [I18nManager.isRTL ? 'right' : 'left']: x,\n      top: y,\n      width,\n      height,\n      backgroundColor,\n      // default styles\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1,\n      borderRadius: 10,\n      padding: 10,\n      ...containerStyle,\n    };\n  };\n\n  renderPointer = (tooltipY) => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const { backgroundColor, pointerColor } = this.props;\n    const pastMiddleLine = yOffset > tooltipY;\n\n    return (\n      <View\n        style={{\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n          [I18nManager.isRTL ? 'right' : 'left']:\n            xOffset +\n            getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n            7.5,\n        }}\n      >\n        <Triangle\n          style={{ borderBottomColor: pointerColor || backgroundColor }}\n          isDown={pastMiddleLine}\n        />\n      </View>\n    );\n  };\n\n  renderContent = (withTooltip) => {\n    const {\n      popover,\n      withPointer,\n      toggleOnPress,\n      toggleAction,\n      highlightColor,\n    } = this.props;\n\n    if (!withTooltip) {\n      return this.wrapWithPress(\n        toggleOnPress,\n        toggleAction,\n        this.props.children\n      );\n    }\n\n    const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n    const tooltipStyle = this.getTooltipStyle();\n    return (\n      <View>\n        <View\n          style={{\n            position: 'absolute',\n            top: yOffset,\n            [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n            backgroundColor: highlightColor,\n            overflow: 'visible',\n            width: elementWidth,\n            height: elementHeight,\n          }}\n        >\n          {this.props.children}\n        </View>\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View style={tooltipStyle} testID=\"tooltipPopoverContainer\">\n          {popover}\n        </View>\n      </View>\n    );\n  };\n\n  componentDidMount() {\n    // wait to compute onLayout values.\n    setTimeout(this.getElementPosition, 500);\n  }\n\n  getElementPosition = () => {\n    const { skipAndroidStatusBar } = this.props;\n    this.renderedElement &&\n      this.renderedElement.measure(\n        (\n          frameOffsetX,\n          frameOffsetY,\n          width,\n          height,\n          pageOffsetX,\n          pageOffsetY\n        ) => {\n          this.setState({\n            xOffset: pageOffsetX,\n            yOffset:\n              isIOS || skipAndroidStatusBar\n                ? pageOffsetY\n                : pageOffsetY - StatusBar.currentHeight,\n            elementWidth: width,\n            elementHeight: height,\n          });\n        }\n      );\n  };\n\n  render() {\n    const { isVisible } = this.state;\n    const {\n      onClose,\n      withOverlay,\n      overlayColor,\n      onOpen,\n      ModalComponent,\n    } = this.props;\n\n    return (\n      <View\n        collapsable={false}\n        ref={(e) => {\n          this.renderedElement = e;\n        }}\n      >\n        {this.renderContent(false)}\n        <ModalComponent\n          animationType=\"fade\"\n          visible={isVisible}\n          transparent\n          onDismiss={onClose}\n          onShow={onOpen}\n          onRequestClose={onClose}\n        >\n          <TouchableOpacity\n            style={styles.container(withOverlay, overlayColor)}\n            onPress={this.toggleTooltip}\n            activeOpacity={1}\n          >\n            {this.renderContent(true)}\n          </TouchableOpacity>\n        </ModalComponent>\n      </View>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  children: PropTypes.element,\n  withPointer: PropTypes.bool,\n  popover: PropTypes.element,\n  toggleOnPress: PropTypes.bool,\n  toggleAction: PropTypes.oneOf(['onPress', 'onLongPress']),\n  height: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  pointerColor: PropTypes.string,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  overlayColor: PropTypes.string,\n  withOverlay: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  skipAndroidStatusBar: PropTypes.bool,\n  ModalComponent: PropTypes.elementType,\n};\n\nTooltip.defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  toggleAction: 'onPress',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: () => {},\n  onOpen: () => {},\n  skipAndroidStatusBar: false,\n  ModalComponent: Modal,\n};\n\nconst styles = {\n  container: (withOverlay, overlayColor) => ({\n    backgroundColor: withOverlay ? overlayColor : 'transparent',\n    flex: 1,\n  }),\n};\n\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');\n"]},"metadata":{},"sourceType":"module"}